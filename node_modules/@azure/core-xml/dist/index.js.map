{"version":3,"file":"index.js","sources":["../src/xml.common.ts","../src/xml.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface XmlOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n\n  /**\n   * property name for a CDATA section.\n   */\n  cdataPropName?: string;\n\n  /**\n   * XML nodes to exclude from parsing.\n   */\n  stopNodes?: string[];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { XMLBuilder, XMLParser, XMLValidator } from \"fast-xml-parser\";\nimport { XML_ATTRKEY, XML_CHARKEY, XmlOptions } from \"./xml.common\";\n\nfunction getCommonOptions(options: XmlOptions): {\n  attributesGroupName: string;\n  textNodeName: string;\n  ignoreAttributes: boolean;\n  suppressBooleanAttributes: boolean;\n} {\n  return {\n    attributesGroupName: XML_ATTRKEY,\n    textNodeName: options.xmlCharKey ?? XML_CHARKEY,\n    ignoreAttributes: false,\n    suppressBooleanAttributes: false,\n  };\n}\n\nfunction getSerializerOptions(options: XmlOptions = {}): {\n  attributesGroupName: string;\n  textNodeName: string;\n  ignoreAttributes: boolean;\n  suppressBooleanAttributes: boolean;\n  attributeNamePrefix: string;\n  format: boolean;\n  suppressEmptyNode: boolean;\n  indentBy: string;\n  rootNodeName: string;\n  cdataPropName: string;\n} {\n  return {\n    ...getCommonOptions(options),\n    attributeNamePrefix: \"@_\",\n    format: true,\n    suppressEmptyNode: true,\n    indentBy: \"\",\n    rootNodeName: options.rootName ?? \"root\",\n    cdataPropName: options.cdataPropName ?? \"__cdata\",\n  };\n}\n\nfunction getParserOptions(options: XmlOptions = {}): {\n  attributesGroupName: string;\n  textNodeName: string;\n  ignoreAttributes: boolean;\n  suppressBooleanAttributes: boolean;\n  parseAttributeValue: boolean;\n  parseTagValue: boolean;\n  attributeNamePrefix: string;\n  stopNodes?: string[];\n  processEntities: boolean;\n} {\n  return {\n    ...getCommonOptions(options),\n    parseAttributeValue: false,\n    parseTagValue: false,\n    attributeNamePrefix: \"\",\n    stopNodes: options.stopNodes,\n    processEntities: true,\n  };\n}\n/**\n * Converts given JSON object to XML string\n * @param obj - JSON object to be converted into XML string\n * @param opts - Options that govern the XML building of given JSON object\n * `rootName` indicates the name of the root element in the resulting XML\n */\nexport function stringifyXML(obj: unknown, opts: XmlOptions = {}): string {\n  const parserOptions = getSerializerOptions(opts);\n  const j2x = new XMLBuilder(parserOptions);\n\n  const node = { [parserOptions.rootNodeName]: obj };\n\n  const xmlData: string = j2x.build(node);\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>${xmlData}`.replace(/\\n/g, \"\");\n}\n\n/**\n * Converts given XML string into JSON\n * @param str - String containing the XML content to be parsed into JSON\n * @param opts - Options that govern the parsing of given xml string\n * `includeRoot` indicates whether the root element is to be included or not in the output\n */\nexport async function parseXML(str: string, opts: XmlOptions = {}): Promise<any> {\n  if (!str) {\n    throw new Error(\"Document is empty\");\n  }\n\n  const validation = XMLValidator.validate(str);\n\n  if (validation !== true) {\n    throw validation;\n  }\n\n  const parser = new XMLParser(getParserOptions(opts));\n  const parsedXml = parser.parse(str);\n\n  // Remove the <?xml version=\"...\" ?> node.\n  // This is a change in behavior on fxp v4. Issue #424\n  if (parsedXml[\"?xml\"]) {\n    delete parsedXml[\"?xml\"];\n  }\n\n  if (!opts.includeRoot) {\n    for (const key of Object.keys(parsedXml)) {\n      const value = parsedXml[key];\n      return typeof value === \"object\" ? { ...value } : value;\n    }\n  }\n\n  return parsedXml;\n}\n"],"names":["XMLBuilder","XMLValidator","XMLParser"],"mappings":"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"}