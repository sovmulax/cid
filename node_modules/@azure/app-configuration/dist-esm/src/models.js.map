{"version":3,"file":"models.js","sourceRoot":"","sources":["../../src/models.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, HttpResponse } from \"@azure/core-http\";\nimport { FeatureFlagValue } from \"./featureFlag\";\nimport { SecretReferenceValue } from \"./secretReference\";\n\n/**\n * Fields that uniquely identify a configuration setting\n */\nexport interface ConfigurationSettingId {\n  /**\n   * The key for this setting.\n   * Feature flags must be prefixed with `.appconfig.featureflag/<feature-flag-name>`.\n   */\n  key: string;\n\n  /**\n   * The label for this setting. Leaving this undefined means this\n   * setting does not have a label.\n   */\n  label?: string;\n\n  /**\n   * The etag for this setting\n   */\n  etag?: string;\n}\n\n/**\n * Necessary fields for updating or creating a new configuration setting\n */\nexport type ConfigurationSettingParam<\n  T extends string | FeatureFlagValue | SecretReferenceValue = string\n> = ConfigurationSettingId & {\n  /**\n   * The content type of the setting's value\n   */\n  contentType?: string;\n\n  /**\n   * Tags for this key\n   */\n  tags?: { [propertyName: string]: string };\n} & (T extends string\n    ? {\n        /**\n         * The setting's value\n         */\n        value?: string;\n      }\n    : {\n        /**\n         * The setting's value\n         */\n        value: T;\n      });\n\n/**\n * Configuration setting with extra metadata from the server, indicating\n * its etag, whether it is currently readOnly and when it was last modified.\n */\nexport type ConfigurationSetting<\n  T extends string | FeatureFlagValue | SecretReferenceValue = string\n> = ConfigurationSettingParam<T> & {\n  /**\n   * Whether or not the setting is read-only\n   */\n  isReadOnly: boolean;\n\n  /**\n   * The date when this setting was last modified\n   */\n  lastModified?: Date;\n};\n\n/**\n * Fields that are hoisted up  from the _response field of the object\n * Used in cases where individual HTTP response fields are important for\n * the user to use in common-use cases like handling http status codes 204 or 304.\n */\nexport interface HttpResponseFields {\n  /**\n   * The HTTP status code for the response\n   */\n  statusCode: number;\n}\n\n/**\n * Parameters for adding a new configuration setting\n */\nexport type AddConfigurationSettingParam<\n  T extends string | FeatureFlagValue | SecretReferenceValue = string\n> = ConfigurationSettingParam<T>;\n\n/**\n * Parameters for creating or updating a new configuration setting\n */\nexport type SetConfigurationSettingParam<\n  T extends string | FeatureFlagValue | SecretReferenceValue = string\n> = ConfigurationSettingParam<T>;\n\n/**\n * Standard base response for getting, deleting or updating a configuration setting\n */\nexport type ConfigurationSettingResponse<HeadersT> = ConfigurationSetting &\n  HttpResponseField<HeadersT> &\n  Pick<HeadersT, Exclude<keyof HeadersT, \"eTag\">>;\n\n/**\n * HTTP response related information - headers and raw body.\n */\nexport interface HttpResponseField<HeadersT> {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: HeadersT;\n\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n  };\n}\n\n/**\n * Options used to provide if-none-match for an HTTP request\n */\nexport interface HttpOnlyIfChangedField {\n  /**\n   * Used to perform an operation only if the targeted resource's etag does not match the value\n   * provided.\n   */\n  onlyIfChanged?: boolean;\n}\n\n/**\n * Options used to provide if-match for an HTTP request\n */\nexport interface HttpOnlyIfUnchangedField {\n  /**\n   * Used to perform an operation only if the targeted resource's etag matches the value provided.\n   */\n  onlyIfUnchanged?: boolean;\n}\n\n/**\n * Used when the API supports selectively returning fields.\n */\nexport interface OptionalFields {\n  /**\n   * Which fields to return for each ConfigurationSetting\n   */\n  fields?: (keyof ConfigurationSetting)[];\n}\n\n/**\n * Sync token header field\n */\nexport interface SyncTokenHeaderField {\n  /**\n   * Enables real-time consistency between requests by providing the returned value in the next\n   * request made to the server.\n   */\n  syncToken?: string;\n}\n\n/**\n * Options used when adding a ConfigurationSetting.\n */\nexport interface AddConfigurationSettingOptions extends OperationOptions {}\n\n/**\n * Response from adding a ConfigurationSetting.\n */\nexport interface AddConfigurationSettingResponse\n  extends ConfigurationSetting,\n    SyncTokenHeaderField,\n    HttpResponseField<SyncTokenHeaderField> {}\n\n/**\n * Response from deleting a ConfigurationSetting.\n */\nexport interface DeleteConfigurationSettingResponse\n  extends SyncTokenHeaderField,\n    HttpResponseFields,\n    HttpResponseField<SyncTokenHeaderField> {}\n\n/**\n * Options for deleting a ConfigurationSetting.\n */\nexport interface DeleteConfigurationSettingOptions\n  extends HttpOnlyIfUnchangedField,\n    OperationOptions {}\n\n/**\n * Options used when saving a ConfigurationSetting.\n */\nexport interface SetConfigurationSettingOptions\n  extends HttpOnlyIfUnchangedField,\n    OperationOptions {}\n\n/**\n * Response from setting a ConfigurationSetting.\n */\nexport interface SetConfigurationSettingResponse\n  extends ConfigurationSetting,\n    SyncTokenHeaderField,\n    HttpResponseField<SyncTokenHeaderField> {}\n\n/**\n * Headers from getting a ConfigurationSetting.\n */\nexport interface GetConfigurationHeaders extends SyncTokenHeaderField {}\n\n/**\n * Response from retrieving a ConfigurationSetting.\n */\nexport interface GetConfigurationSettingResponse\n  extends ConfigurationSetting,\n    GetConfigurationHeaders,\n    HttpResponseFields,\n    HttpResponseField<GetConfigurationHeaders> {}\n\n/**\n * Options for getting a ConfigurationSetting.\n */\nexport interface GetConfigurationSettingOptions\n  extends OperationOptions,\n    HttpOnlyIfChangedField,\n    OptionalFields {\n  /**\n   * Requests the server to respond with the state of the resource at the specified time.\n   */\n  acceptDateTime?: Date;\n}\n\n/**\n * Common options for 'list' style APIs in AppConfig used to specify wildcards as well as\n * the accept date time header.\n */\nexport interface ListSettingsOptions extends OptionalFields {\n  /**\n   * Requests the server to respond with the state of the resource at the specified time.\n   */\n  acceptDateTime?: Date;\n\n  /**\n   * Filters for keys. There are two types of matching:\n   *\n   * 1. Exact matching. Up to 5 key names are allowed, separated by commas (',')\n   * 2. Wildcard matching. A single wildcard expression can be specified.\n   *\n   *    | Value        | Matches                               |\n   *    |--------------|---------------------------------------|\n   *    | omitted or * | Matches any key                       |\n   *    | abc          | Matches a key named abc               |\n   *    | abc*         | Matches key names that start with abc |\n   *\n   * These characters are reserved and must be prefixed with backslash in order\n   * to be specified: * or \\\\ or ,\n   */\n  keyFilter?: string;\n\n  /**\n   * Filters for labels. There are two types of matching:\n   *\n   * 1. Exact matching. Up to 5 labels are allowed, separated by commas (',')\n   * 2. Wildcard matching. A single wildcard expression can be specified.\n   *\n   *    | Value        | Matches                                           |\n   *    |--------------|---------------------------------------------------|\n   *    | omitted or * | Matches any key                                   |\n   *    | %00          | Matches any key without a label                   |\n   *    | prod         | Matches a key with label named prod               |\n   *    | prod*        | Matches key with label names that start with prod |\n   *\n   * These characters are reserved and must be prefixed with backslash in order\n   * to be specified: * or \\\\ or ,\n   */\n  labelFilter?: string;\n}\n\n/**\n * Options for listConfigurationSettings that allow for filtering based on keys, labels and other fields.\n * Also provides `fields` which allows you to selectively choose which fields are populated in the\n * result.\n */\nexport interface ListConfigurationSettingsOptions extends OperationOptions, ListSettingsOptions {}\n\n/**\n * An interface that tracks the settings for paged iteration\n */\nexport interface PageSettings {\n  /**\n   * The token that keeps track of where to continue the iterator\n   */\n  continuationToken?: string;\n  // The appconfig service doesn't currently support letting you select a page size\n  // so we're ignoring their setting for now.\n}\n\n/**\n * A page of configuration settings and the corresponding HTTP response\n */\nexport interface ListConfigurationSettingPage\n  extends HttpResponseField<SyncTokenHeaderField>,\n    PageSettings {\n  /**\n   * The configuration settings for this page of results.\n   */\n  items: ConfigurationSetting[];\n}\n\n/**\n * Options for listRevisions that allow for filtering based on keys, labels and other fields.\n * Also provides `fields` which allows you to selectively choose which fields are populated in the\n * result.\n */\nexport interface ListRevisionsOptions extends OperationOptions, ListSettingsOptions {}\n\n/**\n * A page of configuration settings and the corresponding HTTP response\n */\nexport interface ListRevisionsPage extends HttpResponseField<SyncTokenHeaderField>, PageSettings {\n  /**\n   * The configuration settings for this page of results.\n   */\n  items: ConfigurationSetting[];\n}\n\n/**\n * Options for setReadOnly\n */\nexport interface SetReadOnlyOptions extends HttpOnlyIfUnchangedField, OperationOptions {}\n\n/**\n * Response when setting a value to read-only.\n */\nexport interface SetReadOnlyResponse\n  extends ConfigurationSetting,\n    SyncTokenHeaderField,\n    HttpResponseField<SyncTokenHeaderField> {}\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface RetryOptions {\n  /**\n   * The maximum number of retry attempts.  Defaults to 3.\n   */\n  maxRetries?: number;\n\n  /**\n   * The maximum delay in milliseconds allowed before retrying an operation.\n   */\n  maxRetryDelayInMs?: number;\n}\n"]}