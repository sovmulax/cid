{"version":3,"file":"testHelpers.js","sourceRoot":"","sources":["../../../../test/public/utils/testHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AppConfigurationClient, AppConfigurationClientOptions } from \"../../../src\";\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  ConfigurationSetting,\n  ListConfigurationSettingPage,\n  ListRevisionsPage\n} from \"../../../src\";\nimport {\n  env,\n  isPlaybackMode,\n  RecorderEnvironmentSetup,\n  record,\n  Recorder\n} from \"@azure-tools/test-recorder\";\nimport { assert } from \"chai\";\n\nimport { DefaultAzureCredential, TokenCredential } from \"@azure/identity\";\nimport { RestError } from \"@azure/core-http\";\n\nlet connectionStringNotPresentWarning = false;\nlet tokenCredentialsNotPresentWarning = false;\n\nexport interface CredsAndEndpoint {\n  credential: TokenCredential;\n  endpoint: string;\n}\n\nexport function startRecorder(that: Mocha.Context): Recorder {\n  const recorderEnvSetup: RecorderEnvironmentSetup = {\n    replaceableVariables: {\n      APPCONFIG_CONNECTION_STRING:\n        \"Endpoint=https://myappconfig.azconfig.io;Id=123456;Secret=123456\",\n      AZ_CONFIG_ENDPOINT: \"https://myappconfig.azconfig.io\",\n      AZURE_CLIENT_ID: \"azure_client_id\",\n      AZURE_CLIENT_SECRET: \"azure_client_secret\",\n      AZURE_TENANT_ID: \"azuretenantid\"\n    },\n    customizationsOnRecordings: [],\n    queryParametersToSkip: []\n  };\n\n  return record(that, recorderEnvSetup);\n}\n\nexport function getTokenAuthenticationCredential(): CredsAndEndpoint | undefined {\n  const requiredEnvironmentVariables = [\n    \"AZ_CONFIG_ENDPOINT\",\n    \"AZURE_CLIENT_ID\",\n    \"AZURE_TENANT_ID\",\n    \"AZURE_CLIENT_SECRET\"\n  ];\n\n  for (const name of requiredEnvironmentVariables) {\n    const value = env[name];\n\n    if (value == null) {\n      if (tokenCredentialsNotPresentWarning) {\n        tokenCredentialsNotPresentWarning = true;\n        console.log(\"Functional tests not running - set client identity variables to activate\");\n      }\n\n      return undefined;\n    }\n  }\n\n  return {\n    credential: new DefaultAzureCredential(),\n    endpoint: env[\"AZ_CONFIG_ENDPOINT\"]!\n  };\n}\n\nexport function createAppConfigurationClientForTests<\n  Options extends AppConfigurationClientOptions = AppConfigurationClientOptions\n>(options?: Options): AppConfigurationClient | undefined {\n  const connectionString = env[\"APPCONFIG_CONNECTION_STRING\"];\n\n  if (connectionString == null) {\n    if (!connectionStringNotPresentWarning) {\n      connectionStringNotPresentWarning = true;\n      console.log(\n        \"Functional tests not running - set APPCONFIG_CONNECTION_STRING to a valid AppConfig connection string to activate\"\n      );\n    }\n    return undefined;\n  }\n\n  return new AppConfigurationClient(connectionString, options);\n}\n\nexport async function deleteKeyCompletely(\n  keys: string[],\n  client: AppConfigurationClient\n): Promise<void> {\n  const settingsIterator = client.listConfigurationSettings({\n    keyFilter: keys.join(\",\")\n  });\n\n  for await (const setting of settingsIterator) {\n    if (setting.isReadOnly) {\n      await client.setReadOnly(setting, false);\n    }\n\n    await client.deleteConfigurationSetting({ key: setting.key, label: setting.label });\n  }\n}\n\nexport async function toSortedArray(\n  pagedIterator: PagedAsyncIterableIterator<\n    ConfigurationSetting,\n    ListConfigurationSettingPage | ListRevisionsPage\n  >,\n  compareFn?: (a: ConfigurationSetting, b: ConfigurationSetting) => number\n): Promise<ConfigurationSetting[]> {\n  const settings: ConfigurationSetting[] = [];\n\n  for await (const setting of pagedIterator) {\n    settings.push(setting);\n  }\n\n  let settingsViaPageIterator: ConfigurationSetting[] = [];\n\n  for await (const page of pagedIterator.byPage()) {\n    settingsViaPageIterator = settingsViaPageIterator.concat(page.items);\n  }\n\n  // just a sanity-check\n  assert.deepEqual(settings, settingsViaPageIterator);\n\n  settings.sort((a, b) =>\n    compareFn\n      ? compareFn(a, b)\n      : `${a.key}-${a.label}-${a.value}`.localeCompare(`${b.key}-${b.label}-${b.value}`)\n  );\n\n  return settings;\n}\n\nexport function assertEqualSettings(\n  expected: Pick<ConfigurationSetting, \"key\" | \"value\" | \"label\" | \"isReadOnly\">[],\n  actual: ConfigurationSetting[]\n): void {\n  actual = actual.map((setting) => {\n    return {\n      key: setting.key,\n      label: setting.label || undefined,\n      value: setting.value,\n      isReadOnly: setting.isReadOnly\n    };\n  });\n\n  assert.deepEqual(expected, actual);\n}\n\nexport async function assertThrowsRestError(\n  testFunction: () => Promise<any>,\n  expectedStatusCode: number,\n  message: string = \"\"\n): Promise<Error> {\n  try {\n    await testFunction();\n    assert.fail(`${message}: No error thrown`);\n  } catch (err) {\n    if (!(err instanceof RestError)) {\n      throw new Error(\"Error is not recognized\");\n    }\n    if (err.name === \"RestError\") {\n      assert.equal(expectedStatusCode, err.statusCode, message);\n      return err;\n    }\n\n    assert.fail(`${message}: Caught error but wasn't a RestError: ${err}`);\n  }\n\n  return new Error(\"We won't reach this - both cases above throw because of assert.fail()\");\n}\n\nexport async function assertThrowsAbortError(\n  testFunction: () => Promise<any>,\n  message = \"\"\n): Promise<Error> {\n  try {\n    await testFunction();\n    assert.fail(`${message}: No error thrown`);\n  } catch (e) {\n    if (!(e instanceof Error)) {\n      throw new Error(\"Error is not recognized\");\n    }\n    if (isPlaybackMode() && (e.name === \"FetchError\" || e.name === \"AbortError\")) {\n      return e;\n    } else {\n      assert.equal(e.name, \"AbortError\");\n      return e;\n    }\n  }\n}\n"]}