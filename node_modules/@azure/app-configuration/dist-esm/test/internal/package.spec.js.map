{"version":3,"file":"package.spec.js","sourceRoot":"","sources":["../../../test/internal/package.spec.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,MAAM,EAAE,MAAM,MAAM,CAAC;AAC9B,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE1C,OAAO,EAAE,cAAc,EAAE,MAAM,kCAAkC,CAAC;AAElE,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,MAAM,IAAI,CAAC;AAEpB,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACzC,2FAA2F;IAC3F,yBAAyB;IACzB,EAAE,CAAC,+CAA+C,EAAE;QAClD,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;QAED,IAAI,mBAEH,CAAC;QAEF,IAAI;YACF,wBAAwB;YACxB,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAC9B,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,uBAAuB,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CACtF,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,iBAAiB;YACjB,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAC9B,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAiB,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAChF,CAAC;SACH;QAED,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { assert } from \"chai\";\nimport { isNode } from \"@azure/core-http\";\n\nimport { packageVersion } from \"../../src/appConfigurationClient\";\nimport { Context } from \"mocha\";\nimport path from \"path\";\nimport fs from \"fs\";\n\ndescribe(\"packagejson related tests\", () => {\n  // if this test is failing you need to update the contant `packageVersion` referenced above\n  // in the generated code.\n  it(\"user agent string matches the package version\", function(this: Context) {\n    if (!isNode) {\n      this.skip();\n    }\n\n    let packageJsonContents: {\n      [property: string]: string;\n    };\n\n    try {\n      // For integration tests\n      packageJsonContents = JSON.parse(\n        fs.readFileSync(path.join(__dirname, \"../../../package.json\"), { encoding: \"utf-8\" })\n      );\n    } catch (e) {\n      // For unit tests\n      packageJsonContents = JSON.parse(\n        fs.readFileSync(path.join(__dirname, \"../package.json\"), { encoding: \"utf-8\" })\n      );\n    }\n\n    assert.strictEqual(packageJsonContents.version, packageVersion);\n  });\n});\n"]}