{"version":3,"file":"http.spec.js","sourceRoot":"","sources":["../../../test/internal/http.spec.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAChF,OAAO,EAAE,MAAM,EAAE,MAAM,MAAM,CAAC;AAC9B,OAAO,EAAE,sBAAsB,EAAE,MAAM,WAAW,CAAC;AACnD,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EACL,kBAAkB,EAElB,cAAc,EACf,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EACL,oCAAoC,EACpC,qBAAqB,EACrB,aAAa,EACd,MAAM,6BAA6B,CAAC;AAErC,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAI7B,QAAQ,CAAC,4BAA4B,EAAE;IACrC,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;QAC1B,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;YAC9B,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;gBACvC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,qBAAqB,CAAC,EAAE;oBACtD,EAAE,EAAE,OAAO;oBACX,KAAK,EAAE,UAAU;oBACjB,cAAc,EAAE,CAAC;iBAClB,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;gBACvC,KAAK,MAAM,YAAY,IAAI,CAAC,eAAe,EAAE,wBAAwB,EAAE,YAAY,CAAC,EAAE;oBACpF,MAAM,CAAC,MAAM,CACX,GAAG,EAAE,CAAC,cAAc,CAAC,YAAY,CAAC,EAClC,IAAI,MAAM,CAAC,+BAA+B,YAAY,kBAAkB,CAAC,CAC1E,CAAC;iBACH;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;YACnB,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;gBAChC,MAAM,MAAM,GAAG,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;gBAEvD,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,MAAM,EACN,IAAI,MAAM,CACR,iDAAiD,cAAc,sBAAsB,CACtF,EACD,2BAA2B,CAC5B,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;gBACnC,MAAM,MAAM,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;gBAE7C,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,MAAM,EACN,IAAI,MAAM,CAAC,+BAA+B,cAAc,sBAAsB,CAAC,EAC/E,8BAA8B,CAC/B,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;YAC1B,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;gBACf,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;gBACpC,UAAU,CAAC,2BAA2B,CAAC,cAAc,CAAC,CAAC;gBAEvD,gDAAgD;gBAChD,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,uBAAuB,EAAE,CAAC,CAAC;gBAE9D,UAAU,CAAC,2BAA2B,CAAC,eAAe,CAAC,CAAC;gBACxD,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,YAAY,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC;gBAErF,mFAAmF;gBACnF,QAAQ;gBACR,UAAU,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,CAAC;gBAC1D,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,YAAY,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC;gBAEvF,mEAAmE;gBACnE,UAAU,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,CAAC;gBAC1D,8BAA8B;gBAC9B,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,YAAY,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC;gBAEvF,sEAAsE;gBACtE,aAAa;gBACb,UAAU,CAAC,2BAA2B,CAAC,iCAAiC,CAAC,CAAC;gBAC1E,MAAM,CAAC,KAAK,CACV,6BAA6B,EAC7B,YAAY,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC,CACnD,CAAC;gBAEF,qEAAqE;gBACrE,0BAA0B;gBAC1B,0EAA0E;gBAC1E,0BAA0B;gBAC1B,UAAU,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC;gBAClD,MAAM,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,IAAI,MAA8B,CAAC;QACnC,IAAI,QAAkB,CAAC;QAEvB,UAAU,CAAC;YACT,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;YAC/B,MAAM,GAAG,oCAAoC,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,KAAK;YACb,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YACxC,MAAM,QAAQ,GAAG,MAAM,CAAC,yBAAyB,CAAC;gBAChD,cAAc,EAAE;oBACd,aAAa,EAAE;wBACb,wBAAwB,EAAE,qCAAqC;qBAChE;iBACF;aACF,CAAC,CAAC;YAEH,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;YACzC,MAAM,QAAQ,GAAG,MAAM,CAAC,yBAAyB,EAAE,CAAC;YACpD,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,mEAAmE;IACnE,kEAAkE;IAClE,kEAAkE;IAClE,iCAAiC;IACjC,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;QAC1D,IAAI,MAA8B,CAAC;QACnC,IAAI,UAAsB,CAAC;QAC3B,IAAI,KAAiB,CAAC;QAEtB,UAAU,CAAC;YACT,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBACzC,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,OAAO;aACR;YAED,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;YAE9B,MAAM;gBACJ,oCAAoC,CAAwC;oBAC1E,UAAU,EAAE,UAAU;iBACvB,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YAEpB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;gBACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YACD,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC;;YACR,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBACzC,OAAO;aACR;YAED,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,SAAS,EAAE,CAAA,EAAE;gBAClC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;aAC3B;YACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK;YACtD,UAAU,CAAC,2BAA2B,CAAC,kBAAkB,CAAC,CAAC;YAE3D,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,EAAE;gBAC7B,UAAU,EAAE;oBACV,YAAY,EAAE,aAAa;iBAC5B;aACF,CAAC;iBACC,GAAG,CAAC,IAAI,CAAC;iBACT,KAAK,CAAC,GAAG,CAAC,CAAC;YAEd,MAAM,qBAAqB,CACzB,KAAK,IAAI,EAAE,CACT,MAAM,CAAC,uBAAuB,CAAC;gBAC7B,GAAG,EAAE,cAAc;aACpB,CAAC,EACJ,GAAG,CACJ,CAAC;YAEF,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;YACvC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,oCAAoC,EAAE,CAAC,CAAC;YAEvF,MAAM,MAAM,CAAC,uBAAuB,CAAC;gBACnC,GAAG,EAAE,cAAc;aACpB,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,uBAAuB,EAAE,EAAE,+BAA+B,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;YACvC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,oCAAoC,EAAE,CAAC,CAAC;YAEvF,MAAM,MAAM,CAAC,uBAAuB,CAAC;gBACnC,GAAG,EAAE,cAAc;aACpB,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,uBAAuB,EAAE,EAAE,+BAA+B,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;YACvC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,oCAAoC,EAAE,CAAC,CAAC;YAEvF,MAAM,MAAM,CAAC,uBAAuB,CAAC;gBACnC,GAAG,EAAE,cAAc;aACpB,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,uBAAuB,EAAE,EAAE,+BAA+B,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,uCAAuC,EAAE,CAAC,CAAC;YAE7F,MAAM,MAAM,CAAC,0BAA0B,CAAC;gBACtC,GAAG,EAAE,cAAc;aACpB,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,uBAAuB,EAAE,EAAE,kCAAkC,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YACxC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,qCAAqC,EAAE,CAAC,CAAC;YAExF,MAAM,QAAQ,GAAG,MAAM,CAAC,yBAAyB,CAAC;gBAChD,SAAS,EAAE,cAAc;aAC1B,CAAC,CAAC;YAEH,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtB,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,uBAAuB,EAAE,EAAE,gCAAgC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;YAC7B,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,0BAA0B,EAAE,CAAC,CAAC;YAE7E,MAAM,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC;gBACpC,SAAS,EAAE,cAAc;aAC1B,CAAC,CAAC;YAEH,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtB,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,uBAAuB,EAAE,EAAE,qBAAqB,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YAC3C,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,wBAAwB,EAAE,CAAC,CAAC;YAE3E,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,0BAA0B,EAAE,CAAC,CAAC;YAEhF,MAAM,MAAM,CAAC,WAAW,CACtB;gBACE,GAAG,EAAE,cAAc;aACpB,EACD,IAAI,CACL,CAAC;YAEF,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,uBAAuB,EAAE,EAAE,mBAAmB,CAAC,CAAC;YAExE,UAAU,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC,CAAC,qCAAqC;YAExF,MAAM,MAAM,CAAC,WAAW,CACtB;gBACE,GAAG,EAAE,cAAc;aACpB,EACD,KAAK,CACN,CAAC;YAEF,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,uBAAuB,EAAE,EAAE,qBAAqB,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;QAC/B,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;YACjC,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;YACpC,UAAU,CAAC,2BAA2B,CAAC,cAAc,CAAC,CAAC;YACvD,MAAM,MAAM,GAAG,IAAI,sBAAsB,CACvC,yDAAyD,EACzD,EAAE,UAAU,EAA2C,CACxD,CAAC;YACF,MAAM,CAAC,KAAK,CACV,UAAU,CAAC,oBAAoB,CAAC,CAAC,IAAI,EACrC,CAAC,EACD,0DAA0D,CAC3D,CAAC;YACF,MAAM,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CACV,UAAU,CAAC,oBAAoB,CAAC,CAAC,IAAI,EACrC,CAAC,EACD,yDAAyD,CAC1D,CAAC;YACF,MAAM,CAAC,SAAS,CACd,UAAU,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EACzC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,EAAE,EAC9C,uCAAuC,CACxC,CAAC;YACF,MAAM,CAAC,SAAS,CACd,UAAU,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EACzC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,EAAE,EAC9C,uCAAuC,CACxC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,SAAS,YAAY,CAAC,UAA8B;IAClD,IAAI,CAAC,UAAU,EAAE;QACf,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;KACxD;IAED,OAAO,UAAU;SACd,KAAK,CAAC,GAAG,CAAC;SACV,IAAI,EAAE;SACN,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { parseSyncToken, SyncTokens } from \"../../src/internal/synctokenpolicy\";\nimport { assert } from \"chai\";\nimport { AppConfigurationClient } from \"../../src\";\nimport nock from \"nock\";\nimport {\n  getUserAgentPrefix,\n  InternalAppConfigurationClientOptions,\n  packageVersion\n} from \"../../src/appConfigurationClient\";\nimport {\n  createAppConfigurationClientForTests,\n  assertThrowsRestError,\n  startRecorder\n} from \"../public/utils/testHelpers\";\n\nimport * as chai from \"chai\";\nimport { Recorder } from \"@azure-tools/test-recorder\";\nimport { Context } from \"mocha\";\n\ndescribe(\"http request related tests\", function() {\n  describe(\"unit tests\", () => {\n    describe(\"parseSyncToken\", () => {\n      it(\"can parse various sync tokens\", () => {\n        assert.deepEqual(parseSyncToken(\"theid=thevalue;sn=1\"), {\n          id: \"theid\",\n          value: \"thevalue\",\n          sequenceNumber: 1\n        });\n      });\n\n      it(\"throws on invalid sync tokens\", () => {\n        for (const invalidToken of [\"invalid token\", \"missing=sequencenumber\", \"key=value;\"]) {\n          assert.throws(\n            () => parseSyncToken(invalidToken),\n            new RegExp(`Failed to parse sync token '${invalidToken}' with regex .+$`)\n          );\n        }\n      });\n    });\n\n    it(\"useragent\", () => {\n      describe(\"with user prefix\", () => {\n        const prefix = getUserAgentPrefix(\"MyCustomUserAgent\");\n\n        chai.assert.match(\n          prefix,\n          new RegExp(\n            `^MyCustomUserAgent azsdk-js-app-configuration/${packageVersion}+ core-http/[^ ]+.+$`\n          ),\n          `Using a custom user agent`\n        );\n      });\n\n      describe(\"without user prefix\", () => {\n        const prefix = getUserAgentPrefix(undefined);\n\n        chai.assert.match(\n          prefix,\n          new RegExp(`^azsdk-js-app-configuration/${packageVersion}+ core-http/[^ ]+.+$`),\n          `Using the default user agent`\n        );\n      });\n    });\n\n    describe(\"syncTokens\", () => {\n      it(\"basic\", () => {\n        const syncTokens = new SyncTokens();\n        syncTokens.addSyncTokenFromHeaderValue(\"a=value;sn=0\");\n\n        // note that 'sn' is purposefully not serialized\n        assert.equal(\"a=value\", syncTokens.getSyncTokenHeaderValue());\n\n        syncTokens.addSyncTokenFromHeaderValue(\"b=value2;sn=0\");\n        assert.equal(\"a=value,b=value2\", splitAndSort(syncTokens.getSyncTokenHeaderValue()));\n\n        // now we'll rev the sequence number field - it should overwrite the original value\n        // for b\n        syncTokens.addSyncTokenFromHeaderValue(\"b=value2.1;sn=1\");\n        assert.equal(\"a=value,b=value2.1\", splitAndSort(syncTokens.getSyncTokenHeaderValue()));\n\n        // sending in an older version of an existing key should do nothing\n        syncTokens.addSyncTokenFromHeaderValue(\"b=value2.1;sn=0\");\n        // note that 'b' didn't change\n        assert.equal(\"a=value,b=value2.1\", splitAndSort(syncTokens.getSyncTokenHeaderValue()));\n\n        // and sending in multiple values acts the same as passing them in one\n        // at a time.\n        syncTokens.addSyncTokenFromHeaderValue(\"b=value2.2;sn=100,c=value3;sn=1\");\n        assert.equal(\n          \"a=value,b=value2.2,c=value3\",\n          splitAndSort(syncTokens.getSyncTokenHeaderValue())\n        );\n\n        // and if we get back undefined (ie, the header wasn't there) then it\n        // resets the entire thing\n        // (sync tokens are temporary in nature and expire as things are committed\n        // and moved out of cache)\n        syncTokens.addSyncTokenFromHeaderValue(undefined);\n        assert.ok(!syncTokens.getSyncTokenHeaderValue());\n      });\n    });\n  });\n\n  describe(\"custom client ID\", () => {\n    let client: AppConfigurationClient;\n    let recorder: Recorder;\n\n    beforeEach(function(this: Context) {\n      recorder = startRecorder(this);\n      client = createAppConfigurationClientForTests() || this.skip();\n    });\n\n    afterEach(async function() {\n      await recorder.stop();\n    });\n\n    it(\"custom client request ID\", async () => {\n      const iterator = client.listConfigurationSettings({\n        requestOptions: {\n          customHeaders: {\n            \"x-ms-client-request-id\": \"this is my custom client request id\"\n          }\n        }\n      });\n\n      await iterator.next();\n    });\n\n    it(\"default client request ID\", async () => {\n      const iterator = client.listConfigurationSettings();\n      await iterator.next();\n    });\n  });\n\n  // these tests are only testing that the requests and responses are\n  // properly extracting and sending the sync token header (which is\n  // why they appear to not do much of anything meaningful with what\n  // they send or reply back with).\n  describe(\"request/reply tests for sync token headers\", () => {\n    let client: AppConfigurationClient;\n    let syncTokens: SyncTokens;\n    let scope: nock.Scope;\n\n    beforeEach(function(this: Context) {\n      if (nock == null || nock.recorder == null) {\n        this.skip();\n        return;\n      }\n\n      syncTokens = new SyncTokens();\n\n      client =\n        createAppConfigurationClientForTests<InternalAppConfigurationClientOptions>({\n          syncTokens: syncTokens\n        }) || this.skip();\n\n      nock.recorder.clear();\n      nock.restore();\n      nock.cleanAll();\n      if (!nock.isActive()) {\n        nock.activate();\n      }\n      scope = nock(/.*/);\n    });\n\n    afterEach(function(this: Context) {\n      if (nock == null || nock.recorder == null) {\n        return;\n      }\n\n      if (!this.currentTest?.isPending()) {\n        assert.ok(scope.isDone());\n      }\n      nock.recorder.clear();\n      nock.restore();\n      nock.cleanAll();\n    });\n\n    it(\"policy is setup properly to send sync tokens\", async function() {\n      syncTokens.addSyncTokenFromHeaderValue(`hello=world;sn=1`);\n\n      const policyScope = nock(/.*/, {\n        reqheaders: {\n          \"sync-token\": \"hello=world\"\n        }\n      })\n        .get(/.*/)\n        .reply(418);\n\n      await assertThrowsRestError(\n        async () =>\n          client.getConfigurationSetting({\n            key: \"doesntmatter\"\n          }),\n        418\n      );\n\n      assert.ok(policyScope.isDone());\n    });\n\n    it(\"addConfigurationSetting\", async () => {\n      scope.put(/.*/).reply(200, \"\", { \"sync-token\": \"addConfigurationSetting=value;sn=1\" });\n\n      await client.addConfigurationSetting({\n        key: \"doesntmatter\"\n      });\n\n      assert.equal(syncTokens.getSyncTokenHeaderValue(), \"addConfigurationSetting=value\");\n    });\n\n    it(\"getConfigurationSetting\", async () => {\n      scope.get(/.*/).reply(200, \"\", { \"sync-token\": \"getConfigurationSetting=value;sn=1\" });\n\n      await client.getConfigurationSetting({\n        key: \"doesntmatter\"\n      });\n\n      assert.equal(syncTokens.getSyncTokenHeaderValue(), \"getConfigurationSetting=value\");\n    });\n\n    it(\"setConfigurationSetting\", async () => {\n      scope.put(/.*/).reply(200, \"\", { \"sync-token\": \"setConfigurationSetting=value;sn=1\" });\n\n      await client.setConfigurationSetting({\n        key: \"doesntmatter\"\n      });\n\n      assert.equal(syncTokens.getSyncTokenHeaderValue(), \"setConfigurationSetting=value\");\n    });\n\n    it(\"deleteConfigurationSetting\", async () => {\n      scope.delete(/.*/).reply(200, \"\", { \"sync-token\": \"deleteConfigurationSetting=value;sn=1\" });\n\n      await client.deleteConfigurationSetting({\n        key: \"doesntmatter\"\n      });\n\n      assert.equal(syncTokens.getSyncTokenHeaderValue(), \"deleteConfigurationSetting=value\");\n    });\n\n    it(\"listConfigurationSetting\", async () => {\n      scope.get(/.*/).reply(200, \"\", { \"sync-token\": \"listConfigurationSetting=value;sn=1\" });\n\n      const iterator = client.listConfigurationSettings({\n        keyFilter: \"doesntmatter\"\n      });\n\n      await iterator.next();\n      assert.equal(syncTokens.getSyncTokenHeaderValue(), \"listConfigurationSetting=value\");\n    });\n\n    it(\"listRevisions\", async () => {\n      scope.get(/.*/).reply(200, \"\", { \"sync-token\": \"listRevisions=value;sn=1\" });\n\n      const iterator = client.listRevisions({\n        keyFilter: \"doesntmatter\"\n      });\n\n      await iterator.next();\n      assert.equal(syncTokens.getSyncTokenHeaderValue(), \"listRevisions=value\");\n    });\n\n    it(\"setReadOnly (clear and set)\", async () => {\n      scope.put(/.*/).reply(200, \"\", { \"sync-token\": \"setReadOnly=value;sn=1\" });\n\n      scope.delete(/.*/).reply(200, \"\", { \"sync-token\": \"clearReadOnly=value;sn=1\" });\n\n      await client.setReadOnly(\n        {\n          key: \"doesntmatter\"\n        },\n        true\n      );\n\n      assert.equal(syncTokens.getSyncTokenHeaderValue(), \"setReadOnly=value\");\n\n      syncTokens.addSyncTokenFromHeaderValue(undefined); // clear out any previous sync tokens\n\n      await client.setReadOnly(\n        {\n          key: \"doesntmatter\"\n        },\n        false\n      );\n\n      assert.equal(syncTokens.getSyncTokenHeaderValue(), \"clearReadOnly=value\");\n    });\n  });\n\n  describe(\"syncToken\", async () => {\n    it(\"update sync token\", async () => {\n      const syncTokens = new SyncTokens();\n      syncTokens.addSyncTokenFromHeaderValue(\"a=value;sn=0\");\n      const client = new AppConfigurationClient(\n        \"Endpoint=https://endpoint.azconfig.io;Id=abc;Secret=123\",\n        { syncTokens } as InternalAppConfigurationClientOptions\n      );\n      assert.equal(\n        syncTokens[\"_currentSyncTokens\"].size,\n        1,\n        \"Unexpected number of syncTokens before the `update` call\"\n      );\n      client.updateSyncToken(\"b=value;sn=3\");\n      assert.equal(\n        syncTokens[\"_currentSyncTokens\"].size,\n        2,\n        \"Unexpected number of syncTokens after the `update` call\"\n      );\n      assert.deepEqual(\n        syncTokens[\"_currentSyncTokens\"].get(\"a\"),\n        { id: \"a\", value: \"value\", sequenceNumber: 0 },\n        \"Unexpected object present for key `a`\"\n      );\n      assert.deepEqual(\n        syncTokens[\"_currentSyncTokens\"].get(\"b\"),\n        { id: \"b\", value: \"value\", sequenceNumber: 3 },\n        \"Unexpected object present for key `b`\"\n      );\n    });\n  });\n});\n\nfunction splitAndSort(syncTokens: string | undefined): string {\n  if (!syncTokens) {\n    throw new Error(\"Undefined can't be split and sorted\");\n  }\n\n  return syncTokens\n    .split(\",\")\n    .sort()\n    .join(\",\");\n}\n"]}