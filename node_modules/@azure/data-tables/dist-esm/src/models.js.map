{"version":3,"file":"models.js","sourceRoot":"","sources":["../../src/models.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CommonClientOptions, OperationOptions } from \"@azure/core-client\";\nimport { TableGetAccessPolicyHeaders, TableInsertEntityHeaders } from \"./generated/models\";\n\n/**\n * Represents the Create or Delete Entity operation to be included in a Transaction request\n */\nexport type CreateDeleteEntityAction = [\"create\" | \"delete\", TableEntity];\n\n/**\n * Represents the Update or Upsert Entity operation to be included in a Transaction request\n */\nexport type UpdateEntityAction =\n  | [\"update\" | \"upsert\", TableEntity]\n  | [\"update\" | \"upsert\", TableEntity, \"Merge\" | \"Replace\"]\n  | [\"update\" | \"upsert\", TableEntity, \"Merge\" | \"Replace\", UpdateTableEntityOptions | undefined];\n\n/**\n * Represents the union of all the available transactional actions\n */\nexport type TransactionAction = CreateDeleteEntityAction | UpdateEntityAction;\n\n/**\n * Client options used to configure Tables Api requests\n */\nexport type TableServiceClientOptions = CommonClientOptions & {\n  endpoint?: string;\n  version?: string;\n};\n\n/**\n * Contains response data for the createEntity operation.\n */\nexport type CreateTableEntityResponse = TableInsertEntityHeaders;\n\n/**\n * Contains response data for the listEntities operation.\n */\nexport type GetTableEntityResponse<T extends object> = TableEntityResult<T>;\n\n/**\n * Optional parameters for DeleteTableEntity operation\n */\nexport type DeleteTableEntityOptions = OperationOptions & {\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was initiated\n   */\n  etag?: string;\n};\n\n/** The properties for the table item. */\nexport interface TableItem {\n  /** The name of the table. */\n  name?: string;\n}\n\n/**\n * OData Query options to limit the set of tables returned.\n */\nexport interface TableQueryOptions {\n  /**\n   * OData filter expression.\n   */\n  filter?: string;\n}\n\n/**\n * OData Query options to limit the set of entities returned.\n */\nexport interface TableEntityQueryOptions {\n  /**\n   * OData filter expression.\n   */\n  filter?: string;\n  /**\n   * A select expression limits the properties on each entity to just those requested.\n   */\n  select?: string[];\n}\n\n/**\n * List tables optional parameters.\n */\nexport type ListTableItemsOptions = OperationOptions & {\n  /**\n   * Query options group\n   */\n  queryOptions?: TableQueryOptions;\n};\n\n/**\n * Output type for query operations\n */\nexport type TableEntityResult<T> = T & {\n  /**\n   * etag property. Always returned by the service\n   */\n  etag: string;\n  /**\n   * Partition key property. Omitted if a select filter is set and this property is not requested\n   */\n  partitionKey?: string;\n  /**\n   * Row key property. Omitted if a select filter is set and this property is not requested\n   */\n  rowKey?: string;\n  /**\n   * Timestamp property. This property is assinged by the service on entity creation\n   * Omitted if a select filter is set and this property is not requested\n   */\n  timestamp?: string;\n};\n\n/**\n * Output page type for query operations\n */\nexport type TableEntityResultPage<T> = Array<TableEntityResult<T>> & {\n  /**\n   * Continuation token to get the next page\n   */\n  continuationToken?: string;\n};\n\n/**\n * List entities optional parameters.\n */\nexport type ListTableEntitiesOptions = OperationOptions & {\n  /**\n   * Query options group\n   */\n  queryOptions?: TableEntityQueryOptions;\n  /**\n   * If true, automatic type conversion will be disabled and entity properties will\n   * be represented by full metadata types. For example, an Int32 value will be \\{value: \"123\", type: \"Int32\"\\} instead of 123.\n   * This option applies for all the properties\n   */\n  disableTypeConversion?: boolean;\n};\n\n/**\n * GetEntity optional parameters.\n */\nexport type GetTableEntityOptions = OperationOptions & {\n  /**\n   * Parameter group\n   */\n  queryOptions?: TableEntityQueryOptions;\n  /**\n   * If true, automatic type conversion will be disabled and entity properties will\n   * be represented by full metadata types. For example, an Int32 value will be \\{value: \"123\", type: \"Int32\"\\} instead of 123.\n   * This option applies for all the properties\n   */\n  disableTypeConversion?: boolean;\n};\n\n/**\n * Update entity optional parameters.\n */\nexport type UpdateTableEntityOptions = OperationOptions & {\n  /**\n   * Match condition for an entity to be updated. If specified and a matching entity is not found, an error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified, an insert will be performed when no existing entity is found to update and a replace will be performed if an existing entity is found.\n   */\n  etag?: string;\n};\n\n/**\n * A set of key-value pairs representing the table entity.\n */\nexport type TableEntity<T extends object = Record<string, unknown>> = T & {\n  /**\n   * The PartitionKey property of the entity.\n   */\n  partitionKey: string;\n  /**\n   * The RowKey property of the entity.\n   */\n  rowKey: string;\n};\n\n/**\n * Supported EDM Types by Azure Tables.\n */\nexport type EdmTypes =\n  | \"Binary\"\n  | \"Boolean\"\n  | \"DateTime\"\n  | \"Double\"\n  | \"Guid\"\n  | \"Int32\"\n  | \"Int64\"\n  | \"String\";\n\n/**\n * Entity Data Model representation for an entity property.\n */\nexport interface Edm<T extends EdmTypes> {\n  /**\n   * The value of the entity property\n   */\n  value: T extends \"Binary\"\n    ? string\n    : T extends \"Boolean\"\n    ? boolean\n    : T extends \"Double\"\n    ? number\n    : T extends \"Int32\"\n    ? number\n    : string;\n  /**\n   * The type of the entity property\n   */\n  type: T;\n}\n\n/**\n * The different modes for Update and Upsert methods\n * - Merge: Updates an entity by updating the entity's properties without replacing the existing entity.\n * - Replace: Updates an existing entity by replacing the entire entity.\n */\nexport type UpdateMode = \"Merge\" | \"Replace\";\n\n/**\n * Represents the response of a Transaction operation\n */\nexport interface TableTransactionResponse {\n  /**\n   * Collection of sub responses\n   */\n  subResponses: TableTransactionEntityResponse[];\n  /**\n   * Main Transaction request status code\n   */\n  status: number;\n  /**\n   * Gets a specific response given a row key\n   */\n  getResponseForEntity: (rowKey: string) => TableTransactionEntityResponse | undefined;\n}\n\n/** The properties for the table query response. */\nexport interface TableQueryResponse {\n  /** List of tables. */\n  value?: TableItem[];\n}\n\n/**\n * Output page type for table query operations\n */\nexport interface TableItemResultPage extends Array<TableItem> {\n  /**\n   * Continuation token to get the next TableItem page\n   */\n  continuationToken?: string;\n}\n\n/**\n * Represents a sub-response of a Transaction operation\n */\nexport interface TableTransactionEntityResponse {\n  /**\n   * Entity's etag\n   */\n  etag?: string;\n  /**\n   * Entity's rowKey\n   */\n  rowKey?: string;\n  /**\n   * Sub-response status\n   */\n  status: number;\n}\n\n/** A signed identifier. */\nexport interface SignedIdentifier {\n  /** A unique id. */\n  id: string;\n  /** The access policy. */\n  accessPolicy?: AccessPolicy;\n}\n\n/** An Access policy. */\nexport interface AccessPolicy {\n  /** The start datetime from which the policy is active. */\n  start?: Date;\n  /** The datetime that the policy expires. */\n  expiry?: Date;\n  /** The permissions for the acl policy. */\n  permission?: string;\n}\n\n/** Contains response data for the getAccessPolicy operation. */\nexport type GetAccessPolicyResponse = TableGetAccessPolicyHeaders & SignedIdentifier[];\n"]}