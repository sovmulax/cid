{"version":3,"file":"accountSasPermissions.js","sourceRoot":"","sources":["../../../src/sas/accountSasPermissions.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC;;;;GAIG;AACH,MAAM,UAAU,+BAA+B,CAAC,WAAmB;IACjE,MAAM,qBAAqB,GAA0B,EAAE,CAAC;IAExD,KAAK,MAAM,CAAC,IAAI,WAAW,EAAE;QAC3B,QAAQ,CAAC,EAAE;YACT,KAAK,GAAG;gBACN,qBAAqB,CAAC,KAAK,GAAG,IAAI,CAAC;gBACnC,MAAM;YACR,KAAK,GAAG;gBACN,qBAAqB,CAAC,KAAK,GAAG,IAAI,CAAC;gBACnC,MAAM;YACR,KAAK,GAAG;gBACN,qBAAqB,CAAC,MAAM,GAAG,IAAI,CAAC;gBACpC,MAAM;YACR,KAAK,GAAG;gBACN,qBAAqB,CAAC,IAAI,GAAG,IAAI,CAAC;gBAClC,MAAM;YACR,KAAK,GAAG;gBACN,qBAAqB,CAAC,GAAG,GAAG,IAAI,CAAC;gBACjC,MAAM;YACR,KAAK,GAAG;gBACN,qBAAqB,CAAC,MAAM,GAAG,IAAI,CAAC;gBACpC,MAAM;YAER;gBACE,MAAM,IAAI,UAAU,CAAC,iCAAiC,CAAC,EAAE,CAAC,CAAC;SAC9D;KACF;IAED,OAAO,qBAAqB,CAAC;AAC/B,CAAC;AAED;;;;;;;;;GASG;AACH,MAAM,UAAU,6BAA6B,CAAC,WAAkC;IAC9E,iFAAiF;IACjF,wFAAwF;IACxF,iFAAiF;IACjF,MAAM,gBAAgB,GAAa,EAAE,CAAC;IACtC,IAAI,WAAW,CAAC,KAAK,EAAE;QACrB,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;IACD,IAAI,WAAW,CAAC,KAAK,EAAE;QACrB,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;IACD,IAAI,WAAW,CAAC,MAAM,EAAE;QACtB,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;IACD,IAAI,WAAW,CAAC,IAAI,EAAE;QACpB,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;IACD,IAAI,WAAW,CAAC,GAAG,EAAE;QACnB,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;IACD,IAAI,WAAW,CAAC,MAAM,EAAE;QACtB,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,OAAO,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACnC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Parse initializes the AccountSASPermissions fields from a string.\n *\n * @param permissions -\n */\nexport function accountSasPermissionsFromString(permissions: string): AccountSasPermissions {\n  const accountSasPermissions: AccountSasPermissions = {};\n\n  for (const c of permissions) {\n    switch (c) {\n      case \"r\":\n        accountSasPermissions.query = true;\n        break;\n      case \"w\":\n        accountSasPermissions.write = true;\n        break;\n      case \"d\":\n        accountSasPermissions.delete = true;\n        break;\n      case \"l\":\n        accountSasPermissions.list = true;\n        break;\n      case \"a\":\n        accountSasPermissions.add = true;\n        break;\n      case \"u\":\n        accountSasPermissions.update = true;\n        break;\n\n      default:\n        throw new RangeError(`Invalid permission character: ${c}`);\n    }\n  }\n\n  return accountSasPermissions;\n}\n\n/**\n * Produces the SAS permissions string for an Azure Storage account.\n * Call this method to set AccountSASSignatureValues Permissions field.\n *\n * Using this method will guarantee the resource types are in\n * an order accepted by the service.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n */\nexport function accountSasPermissionsToString(permissions: AccountSasPermissions): string {\n  // The order of the characters should be as specified here to ensure correctness:\n  // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n  // Use a string array instead of string concatenating += operator for performance\n  const permissionString: string[] = [];\n  if (permissions.query) {\n    permissionString.push(\"r\");\n  }\n  if (permissions.write) {\n    permissionString.push(\"w\");\n  }\n  if (permissions.delete) {\n    permissionString.push(\"d\");\n  }\n  if (permissions.list) {\n    permissionString.push(\"l\");\n  }\n  if (permissions.add) {\n    permissionString.push(\"a\");\n  }\n  if (permissions.update) {\n    permissionString.push(\"u\");\n  }\n\n  return permissionString.join(\"\");\n}\n\n/**\n * A type that looks like an account SAS permission.\n * Used in {@link AccountSasPermissions} to parse SAS permissions from raw objects.\n */\nexport interface AccountSasPermissions {\n  /**\n   * Grants permission to list entities.\n   */\n  query?: boolean;\n\n  /**\n   * Grants permission to create tables\n   */\n  write?: boolean;\n\n  /**\n   * Grants permission to delete tables and entities\n   */\n  delete?: boolean;\n\n  /**\n   * Grants permission to list tables\n   */\n  list?: boolean;\n\n  /**\n   * Grants permission to create entities\n   */\n  add?: boolean;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  update?: boolean;\n}\n"]}