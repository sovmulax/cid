{"version":3,"file":"table.js","sourceRoot":"","sources":["../../../../src/generated/operations/table.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,mBAAmB,CAAC;AAC7C,OAAO,KAAK,UAAU,MAAM,sBAAsB,CAAC;AA4BnD,yCAAyC;AACzC,MAAM,OAAO,SAAS;IAGpB;;;OAGG;IACH,YAAY,MAAuB;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,KAAK,CACH,OAAkC;QAElC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAE,kBAAkB,CAAC,CAAC;IAC3E,CAAC;IAED;;;;OAIG;IACH,MAAM,CACJ,eAAgC,EAChC,OAAmC;QAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,eAAe,EAAE,OAAO,EAAE,EAC5B,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,MAAM,CACJ,KAAa,EACb,OAAmC;QAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,OAAO,EAAE,EAClB,mBAAmB,CACpB,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,aAAa,CACX,KAAa,EACb,OAA0C;QAE1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,OAAO,EAAE,EAClB,0BAA0B,CAC3B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,mCAAmC,CACjC,KAAa,EACb,YAAoB,EACpB,MAAc,EACd,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,EACxC,gDAAgD,CACjD,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,YAAY,CACV,KAAa,EACb,YAAoB,EACpB,MAAc,EACd,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,EACxC,yBAAyB,CAC1B,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,WAAW,CACT,KAAa,EACb,YAAoB,EACpB,MAAc,EACd,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,EACxC,wBAAwB,CACzB,CAAC;IACJ,CAAC;IAED;;;;;;;;;OASG;IACH,YAAY,CACV,KAAa,EACb,YAAoB,EACpB,MAAc,EACd,OAAe,EACf,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,EACjD,yBAAyB,CAC1B,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,YAAY,CACV,KAAa,EACb,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,OAAO,EAAE,EAClB,yBAAyB,CAC1B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,eAAe,CACb,KAAa,EACb,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,OAAO,EAAE,EAClB,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,eAAe,CACb,KAAa,EACb,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,KAAK,EAAE,OAAO,EAAE,EAClB,4BAA4B,CAC7B,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,aAAa,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;AAE7E,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,kBAAkB,GAA6B;IACnD,IAAI,EAAE,SAAS;IACf,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,kBAAkB;YACtC,aAAa,EAAE,OAAO,CAAC,iBAAiB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EAAE,OAAO,CAAC,0BAA0B;SAClD;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,GAAG;QACd,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,aAAa;KACzB;IACD,aAAa,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC;IAC/B,gBAAgB,EAAE;QAChB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,kBAAkB;KAC9B;IACD,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,SAAS;IACf,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,aAAa;YACjC,aAAa,EAAE,OAAO,CAAC,kBAAkB;SAC1C;QACD,GAAG,EAAE;YACH,aAAa,EAAE,OAAO,CAAC,kBAAkB;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EAAE,OAAO,CAAC,2BAA2B;SACnD;KACF;IACD,WAAW,EAAE,UAAU,CAAC,eAAe;IACvC,eAAe,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACpC,aAAa,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC;IAC/B,gBAAgB,EAAE;QAChB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,kBAAkB;QAC7B,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,kBAAkB;KAC9B;IACD,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EAAE,oBAAoB;IAC1B,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE,OAAO,CAAC,kBAAkB;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EAAE,OAAO,CAAC,2BAA2B;SACnD;KACF;IACD,aAAa,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC;IACjD,gBAAgB,EAAE;QAChB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,OAAO;KACnB;IACD,UAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,wBAAwB;YAC5C,aAAa,EAAE,OAAO,CAAC,yBAAyB;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EAAE,OAAO,CAAC,kCAAkC;SAC1D;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,GAAG;QACd,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,gBAAgB;QAC3B,UAAU,CAAC,UAAU;KACtB;IACD,aAAa,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC;IACjD,gBAAgB,EAAE;QAChB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,kBAAkB;KAC9B;IACD,UAAU;CACX,CAAC;AACF,MAAM,gDAAgD,GAA6B;IACjF,IAAI,EAAE,2DAA2D;IACjE,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;YACD,aAAa,EAAE,OAAO,CAAC,+CAA+C;SACvE;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EACX,OAAO,CAAC,wDAAwD;SACnE;KACF;IACD,eAAe,EAAE;QACf,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,OAAO;KACnB;IACD,aAAa,EAAE;QACb,UAAU,CAAC,GAAG;QACd,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,MAAM;KAClB;IACD,gBAAgB,EAAE;QAChB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,kBAAkB;KAC9B;IACD,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,2DAA2D;IACjE,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE,OAAO,CAAC,wBAAwB;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EAAE,OAAO,CAAC,iCAAiC;SACzD;KACF;IACD,WAAW,EAAE,UAAU,CAAC,qBAAqB;IAC7C,eAAe,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,OAAO,CAAC;IACxD,aAAa,EAAE;QACb,UAAU,CAAC,GAAG;QACd,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,MAAM;KAClB;IACD,gBAAgB,EAAE;QAChB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,kBAAkB;QAC7B,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,OAAO;KACnB;IACD,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EAAE,2DAA2D;IACjE,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE,OAAO,CAAC,uBAAuB;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EAAE,OAAO,CAAC,gCAAgC;SACxD;KACF;IACD,WAAW,EAAE,UAAU,CAAC,qBAAqB;IAC7C,eAAe,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,OAAO,CAAC;IACxD,aAAa,EAAE;QACb,UAAU,CAAC,GAAG;QACd,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,MAAM;KAClB;IACD,gBAAgB,EAAE;QAChB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,kBAAkB;QAC7B,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,OAAO;KACnB;IACD,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,2DAA2D;IACjE,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE,OAAO,CAAC,wBAAwB;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EAAE,OAAO,CAAC,iCAAiC;SACzD;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,OAAO,CAAC;IACxD,aAAa,EAAE;QACb,UAAU,CAAC,GAAG;QACd,UAAU,CAAC,KAAK;QAChB,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,MAAM;KAClB;IACD,gBAAgB,EAAE;QAChB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,kBAAkB;QAC7B,UAAU,CAAC,QAAQ;KACpB;IACD,UAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,UAAU;IAChB,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;aAC/D;YACD,aAAa,EAAE,OAAO,CAAC,wBAAwB;SAChD;QACD,GAAG,EAAE;YACH,aAAa,EAAE,OAAO,CAAC,wBAAwB;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EAAE,OAAO,CAAC,iCAAiC;SACzD;KACF;IACD,WAAW,EAAE,UAAU,CAAC,qBAAqB;IAC7C,eAAe,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,OAAO,CAAC;IACxD,aAAa,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC;IACjD,gBAAgB,EAAE;QAChB,UAAU,CAAC,MAAM;QACjB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,kBAAkB;QAC7B,UAAU,CAAC,WAAW;QACtB,UAAU,CAAC,kBAAkB;KAC9B;IACD,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,UAAU;IAChB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kBAAkB,EAAE;qBAC3D;iBACF;gBACD,cAAc,EAAE,mBAAmB;gBACnC,OAAO,EAAE,mBAAmB;gBAC5B,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,kBAAkB;aACnC;YACD,aAAa,EAAE,OAAO,CAAC,2BAA2B;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EAAE,OAAO,CAAC,oCAAoC;SAC5D;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC;IACtD,aAAa,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC;IACjD,gBAAgB,EAAE;QAChB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,OAAO;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE,aAAa;CAC1B,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EAAE,UAAU;IAChB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE,OAAO,CAAC,2BAA2B;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;YACrC,aAAa,EAAE,OAAO,CAAC,oCAAoC;SAC5D;KACF;IACD,WAAW,EAAE,UAAU,CAAC,QAAQ;IAChC,eAAe,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC;IACtD,aAAa,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC;IACjD,gBAAgB,EAAE;QAChB,UAAU,CAAC,OAAO;QAClB,UAAU,CAAC,SAAS;QACpB,UAAU,CAAC,YAAY;QACvB,UAAU,CAAC,OAAO;KACnB;IACD,KAAK,EAAE,IAAI;IACX,WAAW,EAAE,gCAAgC;IAC7C,SAAS,EAAE,KAAK;IAChB,UAAU,EAAE,aAAa;CAC1B,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Table } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { GeneratedClient } from \"../generatedClient\";\nimport {\n  TableQueryOptionalParams,\n  TableQueryOperationResponse,\n  TableProperties,\n  TableCreateOptionalParams,\n  TableCreateResponse,\n  TableDeleteOptionalParams,\n  TableDeleteResponse,\n  TableQueryEntitiesOptionalParams,\n  TableQueryEntitiesResponse,\n  TableQueryEntitiesWithPartitionAndRowKeyOptionalParams,\n  TableQueryEntitiesWithPartitionAndRowKeyResponse,\n  TableUpdateEntityOptionalParams,\n  TableUpdateEntityResponse,\n  TableMergeEntityOptionalParams,\n  TableMergeEntityResponse,\n  TableDeleteEntityOptionalParams,\n  TableDeleteEntityResponse,\n  TableInsertEntityOptionalParams,\n  TableInsertEntityResponse,\n  TableGetAccessPolicyOptionalParams,\n  TableGetAccessPolicyResponse,\n  TableSetAccessPolicyOptionalParams,\n  TableSetAccessPolicyResponse\n} from \"../models\";\n\n/** Class containing Table operations. */\nexport class TableImpl implements Table {\n  private readonly client: GeneratedClient;\n\n  /**\n   * Initialize a new instance of the class Table class.\n   * @param client Reference to the service client\n   */\n  constructor(client: GeneratedClient) {\n    this.client = client;\n  }\n\n  /**\n   * Queries tables under the given account.\n   * @param options The options parameters.\n   */\n  query(\n    options?: TableQueryOptionalParams\n  ): Promise<TableQueryOperationResponse> {\n    return this.client.sendOperationRequest({ options }, queryOperationSpec);\n  }\n\n  /**\n   * Creates a new table under the given account.\n   * @param tableProperties The Table properties.\n   * @param options The options parameters.\n   */\n  create(\n    tableProperties: TableProperties,\n    options?: TableCreateOptionalParams\n  ): Promise<TableCreateResponse> {\n    return this.client.sendOperationRequest(\n      { tableProperties, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Operation permanently deletes the specified table.\n   * @param table The name of the table.\n   * @param options The options parameters.\n   */\n  delete(\n    table: string,\n    options?: TableDeleteOptionalParams\n  ): Promise<TableDeleteResponse> {\n    return this.client.sendOperationRequest(\n      { table, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Queries entities in a table.\n   * @param table The name of the table.\n   * @param options The options parameters.\n   */\n  queryEntities(\n    table: string,\n    options?: TableQueryEntitiesOptionalParams\n  ): Promise<TableQueryEntitiesResponse> {\n    return this.client.sendOperationRequest(\n      { table, options },\n      queryEntitiesOperationSpec\n    );\n  }\n\n  /**\n   * Queries entities in a table.\n   * @param table The name of the table.\n   * @param partitionKey The partition key of the entity.\n   * @param rowKey The row key of the entity.\n   * @param options The options parameters.\n   */\n  queryEntitiesWithPartitionAndRowKey(\n    table: string,\n    partitionKey: string,\n    rowKey: string,\n    options?: TableQueryEntitiesWithPartitionAndRowKeyOptionalParams\n  ): Promise<TableQueryEntitiesWithPartitionAndRowKeyResponse> {\n    return this.client.sendOperationRequest(\n      { table, partitionKey, rowKey, options },\n      queryEntitiesWithPartitionAndRowKeyOperationSpec\n    );\n  }\n\n  /**\n   * Update entity in a table.\n   * @param table The name of the table.\n   * @param partitionKey The partition key of the entity.\n   * @param rowKey The row key of the entity.\n   * @param options The options parameters.\n   */\n  updateEntity(\n    table: string,\n    partitionKey: string,\n    rowKey: string,\n    options?: TableUpdateEntityOptionalParams\n  ): Promise<TableUpdateEntityResponse> {\n    return this.client.sendOperationRequest(\n      { table, partitionKey, rowKey, options },\n      updateEntityOperationSpec\n    );\n  }\n\n  /**\n   * Merge entity in a table.\n   * @param table The name of the table.\n   * @param partitionKey The partition key of the entity.\n   * @param rowKey The row key of the entity.\n   * @param options The options parameters.\n   */\n  mergeEntity(\n    table: string,\n    partitionKey: string,\n    rowKey: string,\n    options?: TableMergeEntityOptionalParams\n  ): Promise<TableMergeEntityResponse> {\n    return this.client.sendOperationRequest(\n      { table, partitionKey, rowKey, options },\n      mergeEntityOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified entity in a table.\n   * @param table The name of the table.\n   * @param partitionKey The partition key of the entity.\n   * @param rowKey The row key of the entity.\n   * @param ifMatch Match condition for an entity to be deleted. If specified and a matching entity is\n   *                not found, an error will be raised. To force an unconditional delete, set to the wildcard character\n   *                (*).\n   * @param options The options parameters.\n   */\n  deleteEntity(\n    table: string,\n    partitionKey: string,\n    rowKey: string,\n    ifMatch: string,\n    options?: TableDeleteEntityOptionalParams\n  ): Promise<TableDeleteEntityResponse> {\n    return this.client.sendOperationRequest(\n      { table, partitionKey, rowKey, ifMatch, options },\n      deleteEntityOperationSpec\n    );\n  }\n\n  /**\n   * Insert entity in a table.\n   * @param table The name of the table.\n   * @param options The options parameters.\n   */\n  insertEntity(\n    table: string,\n    options?: TableInsertEntityOptionalParams\n  ): Promise<TableInsertEntityResponse> {\n    return this.client.sendOperationRequest(\n      { table, options },\n      insertEntityOperationSpec\n    );\n  }\n\n  /**\n   * Retrieves details about any stored access policies specified on the table that may be used with\n   * Shared Access Signatures.\n   * @param table The name of the table.\n   * @param options The options parameters.\n   */\n  getAccessPolicy(\n    table: string,\n    options?: TableGetAccessPolicyOptionalParams\n  ): Promise<TableGetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { table, options },\n      getAccessPolicyOperationSpec\n    );\n  }\n\n  /**\n   * Sets stored access policies for the table that may be used with Shared Access Signatures.\n   * @param table The name of the table.\n   * @param options The options parameters.\n   */\n  setAccessPolicy(\n    table: string,\n    options?: TableSetAccessPolicyOptionalParams\n  ): Promise<TableSetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { table, options },\n      setAccessPolicyOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst queryOperationSpec: coreClient.OperationSpec = {\n  path: \"/Tables\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TableQueryResponse,\n      headersMapper: Mappers.TableQueryHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper: Mappers.TableQueryExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.format,\n    Parameters.top,\n    Parameters.select,\n    Parameters.filter,\n    Parameters.nextTableName\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.dataServiceVersion\n  ],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/Tables\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.TableResponse,\n      headersMapper: Mappers.TableCreateHeaders\n    },\n    204: {\n      headersMapper: Mappers.TableCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper: Mappers.TableCreateExceptionHeaders\n    }\n  },\n  requestBody: Parameters.tableProperties,\n  queryParameters: [Parameters.format],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.dataServiceVersion,\n    Parameters.contentType,\n    Parameters.responsePreference\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/Tables('{table}')\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {\n      headersMapper: Mappers.TableDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper: Mappers.TableDeleteExceptionHeaders\n    }\n  },\n  urlParameters: [Parameters.url, Parameters.table],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1\n  ],\n  serializer\n};\nconst queryEntitiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{table}()\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TableEntityQueryResponse,\n      headersMapper: Mappers.TableQueryEntitiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper: Mappers.TableQueryEntitiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.format,\n    Parameters.top,\n    Parameters.select,\n    Parameters.filter,\n    Parameters.timeout,\n    Parameters.nextPartitionKey,\n    Parameters.nextRowKey\n  ],\n  urlParameters: [Parameters.url, Parameters.table],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.dataServiceVersion\n  ],\n  serializer\n};\nconst queryEntitiesWithPartitionAndRowKeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{table}(PartitionKey='{partitionKey}',RowKey='{rowKey}')\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      },\n      headersMapper: Mappers.TableQueryEntitiesWithPartitionAndRowKeyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper:\n        Mappers.TableQueryEntitiesWithPartitionAndRowKeyExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.format,\n    Parameters.select,\n    Parameters.filter,\n    Parameters.timeout\n  ],\n  urlParameters: [\n    Parameters.url,\n    Parameters.table,\n    Parameters.partitionKey,\n    Parameters.rowKey\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.dataServiceVersion\n  ],\n  serializer\n};\nconst updateEntityOperationSpec: coreClient.OperationSpec = {\n  path: \"/{table}(PartitionKey='{partitionKey}',RowKey='{rowKey}')\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.TableUpdateEntityHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper: Mappers.TableUpdateEntityExceptionHeaders\n    }\n  },\n  requestBody: Parameters.tableEntityProperties,\n  queryParameters: [Parameters.format, Parameters.timeout],\n  urlParameters: [\n    Parameters.url,\n    Parameters.table,\n    Parameters.partitionKey,\n    Parameters.rowKey\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.dataServiceVersion,\n    Parameters.accept1,\n    Parameters.contentType1,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst mergeEntityOperationSpec: coreClient.OperationSpec = {\n  path: \"/{table}(PartitionKey='{partitionKey}',RowKey='{rowKey}')\",\n  httpMethod: \"PATCH\",\n  responses: {\n    204: {\n      headersMapper: Mappers.TableMergeEntityHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper: Mappers.TableMergeEntityExceptionHeaders\n    }\n  },\n  requestBody: Parameters.tableEntityProperties,\n  queryParameters: [Parameters.format, Parameters.timeout],\n  urlParameters: [\n    Parameters.url,\n    Parameters.table,\n    Parameters.partitionKey,\n    Parameters.rowKey\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.dataServiceVersion,\n    Parameters.accept1,\n    Parameters.contentType1,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteEntityOperationSpec: coreClient.OperationSpec = {\n  path: \"/{table}(PartitionKey='{partitionKey}',RowKey='{rowKey}')\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {\n      headersMapper: Mappers.TableDeleteEntityHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper: Mappers.TableDeleteEntityExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.format, Parameters.timeout],\n  urlParameters: [\n    Parameters.url,\n    Parameters.table,\n    Parameters.partitionKey,\n    Parameters.rowKey\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.dataServiceVersion,\n    Parameters.ifMatch1\n  ],\n  serializer\n};\nconst insertEntityOperationSpec: coreClient.OperationSpec = {\n  path: \"/{table}\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      },\n      headersMapper: Mappers.TableInsertEntityHeaders\n    },\n    204: {\n      headersMapper: Mappers.TableInsertEntityHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper: Mappers.TableInsertEntityExceptionHeaders\n    }\n  },\n  requestBody: Parameters.tableEntityProperties,\n  queryParameters: [Parameters.format, Parameters.timeout],\n  urlParameters: [Parameters.url, Parameters.table],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.dataServiceVersion,\n    Parameters.contentType,\n    Parameters.responsePreference\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst getAccessPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{table}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"SignedIdentifier\" }\n          }\n        },\n        serializedName: \"SignedIdentifiers\",\n        xmlName: \"SignedIdentifiers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"SignedIdentifier\"\n      },\n      headersMapper: Mappers.TableGetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper: Mappers.TableGetAccessPolicyExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeout, Parameters.comp],\n  urlParameters: [Parameters.url, Parameters.table],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept2\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setAccessPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{table}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.TableSetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.TableServiceError,\n      headersMapper: Mappers.TableSetAccessPolicyExceptionHeaders\n    }\n  },\n  requestBody: Parameters.tableAcl,\n  queryParameters: [Parameters.timeout, Parameters.comp],\n  urlParameters: [Parameters.url, Parameters.table],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentType2,\n    Parameters.accept3\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\n"]}