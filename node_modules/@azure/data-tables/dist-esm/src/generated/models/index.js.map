{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/generated/models/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AA4aH,4EAA4E;AAC5E,MAAM,CAAN,IAAY,wBAIX;AAJD,WAAY,wBAAwB;IAClC,gGAAoE,CAAA;IACpE,0GAA8E,CAAA;IAC9E,oGAAwE,CAAA;AAC1E,CAAC,EAJW,wBAAwB,KAAxB,wBAAwB,QAInC;AAaD,uEAAuE;AACvE,MAAM,CAAN,IAAY,mBAGX;AAHD,WAAY,mBAAmB;IAC7B,4DAAqC,CAAA;IACrC,uDAAgC,CAAA;AAClC,CAAC,EAHW,mBAAmB,KAAnB,mBAAmB,QAG9B;AAYD,iFAAiF;AACjF,MAAM,CAAN,IAAY,6BAIX;AAJD,WAAY,6BAA6B;IACvC,8CAAa,CAAA;IACb,wDAAuB,CAAA;IACvB,4DAA2B,CAAA;AAC7B,CAAC,EAJW,6BAA6B,KAA7B,6BAA6B,QAIxC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** The properties for the table query response. */\nexport interface TableQueryResponse {\n  /** The metadata response of the table. */\n  odataMetadata?: string;\n  /** List of tables. */\n  value?: TableResponseProperties[];\n}\n\n/** The properties for the table response. */\nexport interface TableResponseProperties {\n  /** The name of the table. */\n  name?: string;\n  /** The odata type of the table. */\n  odataType?: string;\n  /** The id of the table. */\n  odataId?: string;\n  /** The edit link of the table. */\n  odataEditLink?: string;\n}\n\n/** Table Service error. */\nexport interface TableServiceError {\n  /** The odata error. */\n  odataError?: TableServiceErrorOdataError;\n}\n\n/** The odata error. */\nexport interface TableServiceErrorOdataError {\n  /** The service error code. The error codes possible are listed in: https://docs.microsoft.com/rest/api/storageservices/table-service-error-codes */\n  code?: string;\n  /** The service error message. */\n  message?: TableServiceErrorOdataErrorMessage;\n}\n\n/** The service error message. */\nexport interface TableServiceErrorOdataErrorMessage {\n  /** Language code of the error message. */\n  lang?: string;\n  /** The error message. */\n  value?: string;\n}\n\n/** The properties for creating a table. */\nexport interface TableProperties {\n  /** The name of the table to create. */\n  name?: string;\n}\n\n/** The properties for the table entity query response. */\nexport interface TableEntityQueryResponse {\n  /** The metadata response of the table. */\n  odataMetadata?: string;\n  /** List of table entities. */\n  value?: { [propertyName: string]: any }[];\n}\n\n/** A signed identifier. */\nexport interface SignedIdentifier {\n  /** A unique id. */\n  id: string;\n  /** The access policy. */\n  accessPolicy?: AccessPolicy;\n}\n\n/** An Access policy. */\nexport interface AccessPolicy {\n  /** The start datetime from which the policy is active. */\n  start?: string;\n  /** The datetime that the policy expires. */\n  expiry?: string;\n  /** The permissions for the acl policy. */\n  permission?: string;\n}\n\n/** Table Service Properties. */\nexport interface TableServiceProperties {\n  /** Azure Analytics Logging settings. */\n  logging?: Logging;\n  /** A summary of request statistics grouped by API in hourly aggregates for tables. */\n  hourMetrics?: Metrics;\n  /** A summary of request statistics grouped by API in minute aggregates for tables. */\n  minuteMetrics?: Metrics;\n  /** The set of CORS rules. */\n  cors?: CorsRule[];\n}\n\n/** Azure Analytics Logging settings. */\nexport interface Logging {\n  /** The version of Analytics to configure. */\n  version: string;\n  /** Indicates whether all delete requests should be logged. */\n  delete: boolean;\n  /** Indicates whether all read requests should be logged. */\n  read: boolean;\n  /** Indicates whether all write requests should be logged. */\n  write: boolean;\n  /** The retention policy. */\n  retentionPolicy: RetentionPolicy;\n}\n\n/** The retention policy. */\nexport interface RetentionPolicy {\n  /** Indicates whether a retention policy is enabled for the service. */\n  enabled: boolean;\n  /** Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted. */\n  days?: number;\n}\n\n/** A summary of request statistics grouped by API */\nexport interface Metrics {\n  /** The version of Analytics to configure. */\n  version?: string;\n  /** Indicates whether metrics are enabled for the Table service. */\n  enabled: boolean;\n  /** Indicates whether metrics should generate summary statistics for called API operations. */\n  includeAPIs?: boolean;\n  /** The retention policy. */\n  retentionPolicy?: RetentionPolicy;\n}\n\n/** CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain. */\nexport interface CorsRule {\n  /** The origin domains that are permitted to make a request against the service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS. */\n  allowedOrigins: string;\n  /** The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated) */\n  allowedMethods: string;\n  /** The request headers that the origin domain may specify on the CORS request. */\n  allowedHeaders: string;\n  /** The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer. */\n  exposedHeaders: string;\n  /** The maximum amount time that a browser should cache the preflight OPTIONS request. */\n  maxAgeInSeconds: number;\n}\n\n/** Stats for the service. */\nexport interface TableServiceStats {\n  /** Geo-Replication information for the Secondary Storage Service. */\n  geoReplication?: GeoReplication;\n}\n\n/** Geo-Replication information for the Secondary Storage Service */\nexport interface GeoReplication {\n  /** The status of the secondary location. */\n  status: GeoReplicationStatusType;\n  /** A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads. */\n  lastSyncTime: Date;\n}\n\n/** The response for a single table. */\nexport type TableResponse = TableResponseProperties & {\n  /** The metadata response of the table. */\n  odataMetadata?: string;\n};\n\n/** Defines headers for Table_query operation. */\nexport interface TableQueryHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n  /** This header contains the continuation token value. */\n  xMsContinuationNextTableName?: string;\n}\n\n/** Defines headers for Table_query operation. */\nexport interface TableQueryExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Table_create operation. */\nexport interface TableCreateHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n  /** Indicates whether the Prefer request header was honored. If the response does not include this header, then the Prefer header was not honored. If this header is returned, its value will either be return-content or return-no-content. */\n  preferenceApplied?: string;\n}\n\n/** Defines headers for Table_create operation. */\nexport interface TableCreateExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Table_delete operation. */\nexport interface TableDeleteHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n}\n\n/** Defines headers for Table_delete operation. */\nexport interface TableDeleteExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Table_queryEntities operation. */\nexport interface TableQueryEntitiesHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n  /** This header contains the continuation token value for partition key. */\n  xMsContinuationNextPartitionKey?: string;\n  /** This header contains the continuation token value for row key. */\n  xMsContinuationNextRowKey?: string;\n}\n\n/** Defines headers for Table_queryEntities operation. */\nexport interface TableQueryEntitiesExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Table_queryEntitiesWithPartitionAndRowKey operation. */\nexport interface TableQueryEntitiesWithPartitionAndRowKeyHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated */\n  etag?: string;\n  /** This header contains the continuation token value for partition key. */\n  xMsContinuationNextPartitionKey?: string;\n  /** This header contains the continuation token value for row key. */\n  xMsContinuationNextRowKey?: string;\n}\n\n/** Defines headers for Table_queryEntitiesWithPartitionAndRowKey operation. */\nexport interface TableQueryEntitiesWithPartitionAndRowKeyExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Table_updateEntity operation. */\nexport interface TableUpdateEntityHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n  /** UTC date/time value generated by the service that indicates the time at which the entity was last updated. */\n  etag?: string;\n}\n\n/** Defines headers for Table_updateEntity operation. */\nexport interface TableUpdateEntityExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Table_mergeEntity operation. */\nexport interface TableMergeEntityHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n  /** UTC date/time value generated by the service that indicates the time at which the entity was last updated. */\n  etag?: string;\n}\n\n/** Defines headers for Table_mergeEntity operation. */\nexport interface TableMergeEntityExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Table_deleteEntity operation. */\nexport interface TableDeleteEntityHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n}\n\n/** Defines headers for Table_deleteEntity operation. */\nexport interface TableDeleteEntityExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Table_insertEntity operation. */\nexport interface TableInsertEntityHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n  /** UTC date/time value generated by the service that indicates the time at which the entity was last updated. */\n  etag?: string;\n  /** Indicates whether the Prefer request header was honored. If the response does not include this header, then the Prefer header was not honored. If this header is returned, its value will either be return-content or return-no-content. */\n  preferenceApplied?: string;\n  /** Indicates the content type of the payload. The value depends on the value specified for the Accept request header. */\n  contentType?: string;\n}\n\n/** Defines headers for Table_insertEntity operation. */\nexport interface TableInsertEntityExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Table_getAccessPolicy operation. */\nexport interface TableGetAccessPolicyHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n}\n\n/** Defines headers for Table_getAccessPolicy operation. */\nexport interface TableGetAccessPolicyExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Table_setAccessPolicy operation. */\nexport interface TableSetAccessPolicyHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n}\n\n/** Defines headers for Table_setAccessPolicy operation. */\nexport interface TableSetAccessPolicyExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Service_setProperties operation. */\nexport interface ServiceSetPropertiesHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n}\n\n/** Defines headers for Service_setProperties operation. */\nexport interface ServiceSetPropertiesExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Service_getProperties operation. */\nexport interface ServiceGetPropertiesHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n}\n\n/** Defines headers for Service_getProperties operation. */\nexport interface ServiceGetPropertiesExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Defines headers for Service_getStatistics operation. */\nexport interface ServiceGetStatisticsHeaders {\n  /** If a client request id header is sent in the request, this header will be present in the response with the same value. */\n  clientRequestId?: string;\n  /** This header uniquely identifies the request that was made and can be used for troubleshooting the request. */\n  requestId?: string;\n  /** Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. */\n  version?: string;\n  /** UTC date/time value generated by the service that indicates the time at which the response was initiated. */\n  date?: Date;\n}\n\n/** Defines headers for Service_getStatistics operation. */\nexport interface ServiceGetStatisticsExceptionHeaders {\n  errorCode?: string;\n}\n\n/** Parameter group */\nexport interface QueryOptions {\n  /** Specifies the media type for the response. */\n  format?: OdataMetadataFormat;\n  /** Maximum number of records to return. */\n  top?: number;\n  /** Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\". */\n  select?: string;\n  /** OData filter expression. */\n  filter?: string;\n}\n\n/** Known values of {@link OdataMetadataFormat} that the service accepts. */\nexport enum KnownOdataMetadataFormat {\n  ApplicationJsonOdataNometadata = \"application/json;odata=nometadata\",\n  ApplicationJsonOdataMinimalmetadata = \"application/json;odata=minimalmetadata\",\n  ApplicationJsonOdataFullmetadata = \"application/json;odata=fullmetadata\"\n}\n\n/**\n * Defines values for OdataMetadataFormat. \\\n * {@link KnownOdataMetadataFormat} can be used interchangeably with OdataMetadataFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **application\\/json;odata=nometadata** \\\n * **application\\/json;odata=minimalmetadata** \\\n * **application\\/json;odata=fullmetadata**\n */\nexport type OdataMetadataFormat = string;\n\n/** Known values of {@link ResponseFormat} that the service accepts. */\nexport enum KnownResponseFormat {\n  ReturnNoContent = \"return-no-content\",\n  ReturnContent = \"return-content\"\n}\n\n/**\n * Defines values for ResponseFormat. \\\n * {@link KnownResponseFormat} can be used interchangeably with ResponseFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **return-no-content** \\\n * **return-content**\n */\nexport type ResponseFormat = string;\n\n/** Known values of {@link GeoReplicationStatusType} that the service accepts. */\nexport enum KnownGeoReplicationStatusType {\n  Live = \"live\",\n  Bootstrap = \"bootstrap\",\n  Unavailable = \"unavailable\"\n}\n\n/**\n * Defines values for GeoReplicationStatusType. \\\n * {@link KnownGeoReplicationStatusType} can be used interchangeably with GeoReplicationStatusType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **live** \\\n * **bootstrap** \\\n * **unavailable**\n */\nexport type GeoReplicationStatusType = string;\n\n/** Optional parameters. */\nexport interface TableQueryOptionalParams extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** A table query continuation token from a previous call. */\n  nextTableName?: string;\n}\n\n/** Contains response data for the query operation. */\nexport type TableQueryOperationResponse = TableQueryHeaders &\n  TableQueryResponse;\n\n/** Optional parameters. */\nexport interface TableCreateOptionalParams extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** Specifies whether the response should include the inserted entity in the payload. Possible values are return-no-content and return-content. */\n  responsePreference?: ResponseFormat;\n}\n\n/** Contains response data for the create operation. */\nexport type TableCreateResponse = TableCreateHeaders & TableResponse;\n\n/** Optional parameters. */\nexport interface TableDeleteOptionalParams extends coreClient.OperationOptions {\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type TableDeleteResponse = TableDeleteHeaders;\n\n/** Optional parameters. */\nexport interface TableQueryEntitiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n  /** An entity query continuation token from a previous call. */\n  nextPartitionKey?: string;\n  /** An entity query continuation token from a previous call. */\n  nextRowKey?: string;\n}\n\n/** Contains response data for the queryEntities operation. */\nexport type TableQueryEntitiesResponse = TableQueryEntitiesHeaders &\n  TableEntityQueryResponse;\n\n/** Optional parameters. */\nexport interface TableQueryEntitiesWithPartitionAndRowKeyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n}\n\n/** Contains response data for the queryEntitiesWithPartitionAndRowKey operation. */\nexport type TableQueryEntitiesWithPartitionAndRowKeyResponse = TableQueryEntitiesWithPartitionAndRowKeyHeaders & {\n  [propertyName: string]: any;\n};\n\n/** Optional parameters. */\nexport interface TableUpdateEntityOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n  /** The properties for the table entity. */\n  tableEntityProperties?: { [propertyName: string]: any };\n  /** Match condition for an entity to be updated. If specified and a matching entity is not found, an error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified, an insert will be performed when no existing entity is found to update and a replace will be performed if an existing entity is found. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the updateEntity operation. */\nexport type TableUpdateEntityResponse = TableUpdateEntityHeaders;\n\n/** Optional parameters. */\nexport interface TableMergeEntityOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n  /** The properties for the table entity. */\n  tableEntityProperties?: { [propertyName: string]: any };\n  /** Match condition for an entity to be updated. If specified and a matching entity is not found, an error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified, an insert will be performed when no existing entity is found to update and a merge will be performed if an existing entity is found. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the mergeEntity operation. */\nexport type TableMergeEntityResponse = TableMergeEntityHeaders;\n\n/** Optional parameters. */\nexport interface TableDeleteEntityOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n}\n\n/** Contains response data for the deleteEntity operation. */\nexport type TableDeleteEntityResponse = TableDeleteEntityHeaders;\n\n/** Optional parameters. */\nexport interface TableInsertEntityOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** Specifies whether the response should include the inserted entity in the payload. Possible values are return-no-content and return-content. */\n  responsePreference?: ResponseFormat;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n  /** The properties for the table entity. */\n  tableEntityProperties?: { [propertyName: string]: any };\n}\n\n/** Contains response data for the insertEntity operation. */\nexport type TableInsertEntityResponse = TableInsertEntityHeaders & {\n  [propertyName: string]: any;\n};\n\n/** Optional parameters. */\nexport interface TableGetAccessPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n}\n\n/** Contains response data for the getAccessPolicy operation. */\nexport type TableGetAccessPolicyResponse = TableGetAccessPolicyHeaders &\n  SignedIdentifier[];\n\n/** Optional parameters. */\nexport interface TableSetAccessPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n  /** The acls for the table. */\n  tableAcl?: SignedIdentifier[];\n}\n\n/** Contains response data for the setAccessPolicy operation. */\nexport type TableSetAccessPolicyResponse = TableSetAccessPolicyHeaders;\n\n/** Optional parameters. */\nexport interface ServiceSetPropertiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n}\n\n/** Contains response data for the setProperties operation. */\nexport type ServiceSetPropertiesResponse = ServiceSetPropertiesHeaders;\n\n/** Optional parameters. */\nexport interface ServiceGetPropertiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n}\n\n/** Contains response data for the getProperties operation. */\nexport type ServiceGetPropertiesResponse = ServiceGetPropertiesHeaders &\n  TableServiceProperties;\n\n/** Optional parameters. */\nexport interface ServiceGetStatisticsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when analytics logging is enabled. */\n  requestId?: string;\n  /** The timeout parameter is expressed in seconds. */\n  timeout?: number;\n}\n\n/** Contains response data for the getStatistics operation. */\nexport type ServiceGetStatisticsResponse = ServiceGetStatisticsHeaders &\n  TableServiceStats;\n\n/** Optional parameters. */\nexport interface GeneratedClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** Specifies the version of the operation to use for this request. */\n  version?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}