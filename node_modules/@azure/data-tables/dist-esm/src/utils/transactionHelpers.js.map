{"version":3,"file":"transactionHelpers.js","sourceRoot":"","sources":["../../../src/utils/transactionHelpers.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,eAAe,EAAE,4BAA4B,EAAE,MAAM,aAAa,CAAC;AAE5E;;;GAGG;AACH,MAAM,UAAU,oBAAoB,CAAC,WAAmB;IACtD,OAAO,aAAa,WAAW,EAAE,CAAC;AACpC,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,sBAAsB,CAAC,aAAqB;IAC1D,OAAO,SAAS,aAAa,EAAE,CAAC;AAClC,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,yBAAyB,CAAC,aAAqB,EAAE,WAAmB;IAClF,MAAM,mBAAmB,GAAG,SAAS,aAAa,EAAE,CAAC;IACrD,OAAO;QACL,KAAK,mBAAmB,GAAG,4BAA4B,GAAG,eAAe,CAAC,YAAY,yCAAyC,WAAW,GAAG,4BAA4B,GAAG,4BAA4B,EAAE;KAC3M,CAAC;AACJ,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,6BAA6B,CAC3C,SAAmB,EACnB,aAAqB,EACrB,WAAmB;IAEnB,MAAM,mBAAmB,GAAG,sBAAsB,CAAC,aAAa,CAAC,CAAC;IAClE,MAAM,iBAAiB,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;IAC5D,MAAM,eAAe,GAAG,KAAK,iBAAiB,IAAI,CAAC;IACnD,MAAM,iBAAiB,GAAG,KAAK,mBAAmB,IAAI,CAAC;IACvD,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;IACjE,OAAO,GAAG,WAAW,GAAG,4BAA4B,GAAG,eAAe,GAAG,4BAA4B,GAAG,iBAAiB,GAAG,4BAA4B,EAAE,CAAC;AAC7J,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HeaderConstants, TRANSACTION_HTTP_LINE_ENDING } from \"./constants\";\n\n/**\n * Builds a transaction change set boundary to be added to the transaction request body\n * @param changesetId - Id of the transaction changeset\n */\nexport function getChangeSetBoundary(changesetId: string): string {\n  return `changeset_${changesetId}`;\n}\n\n/**\n * Builds a transaction boundary to be added to the transaction request body\n * @param transactionId - Id of the transaction\n */\nexport function getTransactionBoundary(transactionId: string): string {\n  return `batch_${transactionId}`;\n}\n\n/**\n * Returns an initial representation of the Transaction body.\n * @param transactionId - Id of the transaction\n * @param changesetId - Id of the transaction changeset\n */\nexport function getInitialTransactionBody(transactionId: string, changesetId: string): string[] {\n  const transactionBoundary = `batch_${transactionId}`;\n  return [\n    `--${transactionBoundary}${TRANSACTION_HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TYPE}: multipart/mixed; boundary=changeset_${changesetId}${TRANSACTION_HTTP_LINE_ENDING}${TRANSACTION_HTTP_LINE_ENDING}`,\n  ];\n}\n\n/**\n * Build the Transaction http request body to send to the service.\n * @param bodyParts - Parts of the transaction body, containing information about the actions to be included in the transaction request\n * @param transactionId - Id of the transaction\n * @param changesetId - Id of the transaction changeset\n */\nexport function getTransactionHttpRequestBody(\n  bodyParts: string[],\n  transactionId: string,\n  changesetId: string\n): string {\n  const transactionBoundary = getTransactionBoundary(transactionId);\n  const changesetBoundary = getChangeSetBoundary(changesetId);\n  const changesetEnding = `--${changesetBoundary}--`;\n  const transactionEnding = `--${transactionBoundary}--`;\n  const bodyContent = bodyParts.join(TRANSACTION_HTTP_LINE_ENDING);\n  return `${bodyContent}${TRANSACTION_HTTP_LINE_ENDING}${changesetEnding}${TRANSACTION_HTTP_LINE_ENDING}${transactionEnding}${TRANSACTION_HTTP_LINE_ENDING}`;\n}\n"]}