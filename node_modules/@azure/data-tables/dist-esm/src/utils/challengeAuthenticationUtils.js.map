{"version":3,"file":"challengeAuthenticationUtils.js","sourceRoot":"","sources":["../../../src/utils/challengeAuthenticationUtils.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAY,+BAA+B,EAAE,MAAM,2BAA2B,CAAC;AAGtF,OAAO,EAAE,iCAAiC,EAAE,MAAM,oBAAoB,CAAC;AAEvE;;;GAGG;AACH,MAAM,UAAU,qCAAqC,CACnD,QAAkB,EAClB,UAA2B,EAC3B,MAAyB;IAEzB,yCAAyC;IACzC,QAAQ,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,CAAC;IACrD,QAAQ,CAAC,SAAS,CAChB,+BAA+B,CAAC;QAC9B,UAAU;QACV,MAAM;QACN,kBAAkB,EAAE,EAAE,2BAA2B,EAAE,iCAAiC,EAAE;KACvF,CAAC,EACF;QACE,KAAK,EAAE,MAAM;KACd,CACF,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Pipeline, bearerTokenAuthenticationPolicy } from \"@azure/core-rest-pipeline\";\n\nimport { TokenCredential } from \"@azure/core-auth\";\nimport { authorizeRequestOnTenantChallenge } from \"@azure/core-client\";\n\n/**\n * @internal\n * Setups the challenge authentication policy for the provided token credential.\n */\nexport function setTokenChallengeAuthenticationPolicy(\n  pipeline: Pipeline,\n  credential: TokenCredential,\n  scopes: string | string[]\n): void {\n  // Make sure no bearerTokenPolicy is set.\n  pipeline.removePolicy({ name: \"bearerTokenPolicy\" });\n  pipeline.addPolicy(\n    bearerTokenAuthenticationPolicy({\n      credential,\n      scopes,\n      challengeCallbacks: { authorizeRequestOnChallenge: authorizeRequestOnTenantChallenge },\n    }),\n    {\n      phase: \"Sign\",\n    }\n  );\n}\n"]}