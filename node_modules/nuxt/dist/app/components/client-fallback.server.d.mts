export default NuxtClientFallbackServer;
declare const NuxtClientFallbackServer: import("vue").DefineComponent<{
    uid: {
        type: StringConstructor;
    };
    fallbackTag: {
        type: StringConstructor;
        default: () => string;
    };
    fallback: {
        type: StringConstructor;
        default: () => string;
    };
    placeholder: {
        type: StringConstructor;
    };
    placeholderTag: {
        type: StringConstructor;
    };
}, {
    ssrFailed: any;
    ssrVNodes: {
        getBuffer(): import("./utils").SSRBuffer;
        push(item: import("./utils").SSRBufferItem): void;
    };
} | {
    ssrFailed: boolean;
    ssrVNodes: never[];
}, any, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "ssr-error"[], "ssr-error", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    uid: {
        type: StringConstructor;
    };
    fallbackTag: {
        type: StringConstructor;
        default: () => string;
    };
    fallback: {
        type: StringConstructor;
        default: () => string;
    };
    placeholder: {
        type: StringConstructor;
    };
    placeholderTag: {
        type: StringConstructor;
    };
}>> & {
    "onSsr-error"?: ((...args: any[]) => any) | undefined;
}, {
    fallbackTag: string;
    fallback: string;
}>;
